Search a 2D Matrix

You are given an m x n integer matrix matrix with the following two properties:

Each row is sorted in non-decreasing order.
The first integer of each row is greater than the last integer of the previous row.
Given an integer target, return true if target is in matrix or false otherwise.

You must write a solution in O(log(m * n)) time complexity.

Note: Use ref_1 and ref_2 for reference purposes.

Example 1:


Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true
Example 2:


Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13
Output: false

Algorithm:

> Start the program.
> Assign the row and column as 0 and the length of the matrix.
> Open a loop to iterate through each element in the given matrix.
> Check if the given target is equals to the matrix of row and column. If true, return true.
> Else increment the rows and columns.
> Return False at the end of the loop.
> End of the program.