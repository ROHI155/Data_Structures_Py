Longest Substring Without Repeating Characters

Given a string s, find the length of the longest substring without duplicate characters.

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

Algorithm:

> Start the program.
> Assign the start, max_len, and char_ind ans 0.
> Create a for loop to iterate through each element in the s.
> Check the c in char_ind and greater than or equal to the start.
> Update the start with the updation of char_ind plus 1.
> Assign the char_ind of c as I.
> Obtain the maximum length as max of max_len and I, with the start plus 1.
> Return the maximum length.
> End the program.