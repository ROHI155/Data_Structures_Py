Container With Most Water

You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.

Note: Use the ref_1 for reference purposes.

Example 1:

Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.
Example 2:

Input: height = [1,1]
Output: 1

Algorithm:

> Start the program.
> Assign the max_area as 0 initially.
> Assign the n as length of the height.
> Assign the left and the right pointers.
> Check if the left pointer is less than the right pointer.
> Calculate the width and the height from the values of the left and right pointers.
> Using the width and height, calculate and store the value of the area.
> Compare the maximum of max-area and area and store it in max_area.
> Check if the value of left is less than right, then increment the left pointer.
> Else, decrement the right pointer.
> At last, return the max_area.