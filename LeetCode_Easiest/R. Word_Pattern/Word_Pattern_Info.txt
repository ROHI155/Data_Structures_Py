Word Pattern

Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s. Specifically:

Each letter in pattern maps to exactly one unique word in s.
Each unique word in s maps to exactly one letter in pattern.
No two letters map to the same word, and no two words map to the same letter.
 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"

Output: true

Explanation:

The bijection can be established as:

'a' maps to "dog".
'b' maps to "cat".
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"

Output: false

Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"

Output: false


Algorithm:

> Start the program.
> Split the given inputs and store the words.
> Check if the length of words is not equal to the length of the pattern. If yes means return False.
> Open a empty dictionary.
> Iterate through a loop using the length of words.
> Check if the pattern of i is not in the d.
> If true means, then check the words of i in d.
> If true means, then return False.
> Assign the pattern of i equals to words of i.
> Else, check the d of pattern of i is not equal to the words of i.
> If true, return True.
> Return true at the end of the loop.
> End the program.